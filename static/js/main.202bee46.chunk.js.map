{"version":3,"sources":["components/MyAccordion.js","components/AccordionContainer.js","components/MyFab.js","components/FormDialog.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["MyAccordion","onClick","e","props","onAccordionSelect","id","onComplete","onAccordionComplete","Accordion","this","AccordionSummary","aria-label","expandIcon","aria-controls","FormControlLabel","event","stopPropagation","onFocus","control","Checkbox","onChange","label","summary","AccordionDetails","Typography","details","Component","AccordionContainer","getDisplayPercent","percentComplete","getPercentComplete","isNaN","Math","round","Object","values","accordions","filter","x","complete","length","keys","getMessage","entries","key","value","push","onAccordionDelete","className","React","MyFab","alignmentClass","isMobile","useMediaQuery","classes","makeStyles","fabBase","position","bottom","fabLeft","left","fabRight","right","useStyles","alignment","Fab","FormDialog","handleSubmit","preventDefault","errors","validateFields","some","error","setState","state","onCreateAccordion","defaultState","fieldErrors","field","fieldErrorText","validateField","fieldErrorMessage","fieldError","handleSummaryChange","newState","target","handleDetailsChange","handleClickOpen","open","handleClose","Dialog","onClose","aria-labelledby","disableScrollLock","DialogTitle","onSubmit","DialogContent","DialogContentText","TextField","autoFocus","margin","type","fullWidth","Boolean","helperText","DialogActions","Button","color","Footer","href","App","nextAccordionId","max","accordion","active","onCreateNewEmptyPanel","onPanelComplete","accordionId","newAccordions","onPanelDelete","onPanelSelect","1","2","3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0XASqBA,E,4MACnBC,QAAU,SAACC,GACT,EAAKC,MAAMC,kBAAkB,EAAKD,MAAME,K,EAG1CC,WAAa,SAACJ,GACZ,EAAKC,MAAMI,oBAAoB,EAAKJ,MAAME,K,uDAI1C,OACE,eAACG,EAAA,EAAD,CAAWP,QAASQ,KAAKR,QAAzB,UACE,cAACS,EAAA,EAAD,CACEC,aAAW,SACXC,WAAY,cAAC,IAAD,IACZC,gBAAc,kBACdR,GAAG,GAJL,SAME,cAACS,EAAA,EAAD,CACEH,aAAW,cACXV,QAAS,SAACc,GAAD,OAAWA,EAAMC,mBAC1BC,QAAS,SAACF,GAAD,OAAWA,EAAMC,mBAC1BE,QAAS,cAACC,EAAA,EAAD,CAAUC,SAAUX,KAAKH,aAClCe,MAAOZ,KAAKN,MAAMmB,YAGtB,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UAAaf,KAAKN,MAAMsB,mB,GA3BOC,aCLpBC,G,kNACnBC,kBAAoB,WAClB,IAAIC,EAAkB,EAAKC,qBAC3B,OAAOC,MAAMF,GAAmB,GAAKA,G,EAIvCC,mBAAqB,WACnB,OAAOE,KAAKC,MACTC,OAAOC,OAAO,EAAKhC,MAAMiC,YAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEC,YAAUC,OAC9DN,OAAOO,KAAK,EAAKtC,MAAMiC,YAAYI,OACnC,M,EAINE,WAAa,WACX,IAAIb,EAAkB,EAAKC,qBAC3B,GAAIC,MAAMF,GACR,MAAO,sEACT,OAAQA,GACN,KAAK,IACH,MAAO,KACT,QACE,MAAO,oC,uDAMX,IADA,IAAIO,EAAa,GACjB,MAA2BF,OAAOS,QAAQlC,KAAKN,MAAMiC,YAArD,eAAkE,CAAC,IAAD,sBAAtDQ,EAAsD,KAAjDC,EAAiD,KAChET,EAAWU,KACT,cAAC,EAAD,CACEzC,GAAIuC,EAEJtB,QAASuB,EAAMvB,QACfG,QAASoB,EAAMpB,QACfrB,kBAAmBK,KAAKN,MAAMC,kBAC9BG,oBAAqBE,KAAKN,MAAMI,oBAChCwC,kBAAmBtC,KAAKN,MAAM4C,mBALzBH,IAWX,OACE,sBAAKI,UAFS,kBAEd,UACGvC,KAAKiC,aACN,sBAAKM,UAAU,yBAAf,UACE,qBAAKA,UAAU,8BAAf,SACE,wCAEF,sBAAKA,UAAU,+BAAf,yBACevC,KAAKmB,oBADpB,UAIDQ,S,GAvDuCa,IAAMvB,Y,iHCEvC,SAASwB,EAAM/C,GAC5B,IAgBIgD,EAhBEC,EAAWC,YAAc,sBAczBC,EAZYC,YAAW,CAC3BC,QAAS,CACPC,SAAU,QACVC,OAAQN,EAAW,OAAS,QAE9BO,QAAS,CACPC,KAAMR,EAAW,OAAS,OAE5BS,SAAU,CACRC,MAAOV,EAAW,OAAS,QAGfW,GAGhB,OAAQ5D,EAAM6D,WACZ,IAAK,QAGL,IAAK,OACHb,EAAiBG,EAAQO,SACzB,MACF,QACEV,EAAiB,GAGrB,OACE,cAACc,EAAA,EAAD,CACEhE,QAASE,EAAMF,QACf+C,UAAS,UAAKM,EAAQE,QAAb,YAAwBL,GAFnC,SAIE,cAAC,IAAD,M,IC9Bee,E,kDACnB,WAAY/D,GAAQ,IAAD,8BACjB,cAAMA,IAiBRgE,aAAe,SAACjE,GACdA,EAAEkE,iBACF,IAAIC,EAAS,EAAKC,iBACdpC,OAAOC,OAAOkC,GAAQE,MAAK,SAACC,GAAD,MAAqB,KAAVA,KACxC,EAAKC,SAAL,2BAAmB,EAAKC,OAAxB,IAA+BL,OAAQA,MAGzC,EAAKlE,MAAMwE,kBAAkB,CAC3BrD,QAAS,EAAKoD,MAAMpD,QACpBG,QAAS,EAAKiD,MAAMjD,UAEtB,EAAKgD,SAAS,EAAKG,gBA7BF,EAgCnBN,eAAiB,WAEf,IADA,IAAID,EAAS,GACb,MAAoCnC,OAAOS,QAAQ,EAAKkC,aAAxD,eAAsE,CAAC,IAAD,sBAA5DC,EAA4D,KAArDC,EAAqD,KACpEV,EAAOS,GAAS,EAAKJ,MAAMI,GAAS,GAAKC,EAE3C,OAAOV,GArCU,EAwCnBW,cAAgB,SAACF,EAAOG,GACtB,IAAIC,EAAa,EAAKR,MAAMI,GAAS,GAAKG,EAC1C,EAAKR,SAAL,2BACK,EAAKC,OADV,IAEEL,OAAO,2BACF,EAAKK,MAAML,QADV,kBAEHS,EAAQI,QA9CI,EAmDnBC,oBAAsB,SAACjF,GACrB,IAAIkF,EAAQ,2BACP,EAAKV,OADE,IAEVpD,QAASpB,EAAEmF,OAAOxC,QAEpB,EAAK4B,SAASW,GAAU,WACtB3E,KAAKuE,cAAc,UAAW,+BAzDf,EA6DnBM,oBAAsB,SAACpF,GACrB,IAAIkF,EAAQ,2BAAQ,EAAKV,OAAb,IAAoBjD,QAASvB,EAAEmF,OAAOxC,QAClD,EAAK4B,SAASW,GAAU,WACtB3E,KAAKuE,cAAc,UAAW,+BAhEf,EAoEnBO,gBAAkB,WAChB,IAAIH,EAAQ,2BAAQ,EAAKV,OAAb,IAAoBc,MAAM,IACtC,EAAKf,SAASW,IAtEG,EAyEnBK,YAAc,WACZ,IAAIL,EAAQ,2BAAQ,EAAKV,OAAb,IAAoBc,MAAM,IACtC,EAAKf,SAASW,IAzEd,EAAKP,YAAc,CACjBvD,QAAS,0BACTG,QAAS,2BAEX,EAAKmD,aAAe,CAClBY,MAAM,EACNlE,QAAS,GACTG,QAAS,GACT4C,OAAQ,CACN/C,QAAS,GACTG,QAAS,KAGb,EAAKiD,MAAQ,EAAKE,aAfD,E,qDA8ET,IAAD,EACkCnE,KAAKiE,MAAxCL,EADC,EACDA,OAAQmB,EADP,EACOA,KAAMlE,EADb,EACaA,QAASG,EADtB,EACsBA,QAC7B,OACE,gCACE,cAAC,EAAD,CAAOuC,UAAU,QAAQ/D,QAASQ,KAAK8E,kBACvC,eAACG,EAAA,EAAD,CACEF,KAAMA,EACNG,QAASlF,KAAKgF,YACdG,kBAAgB,GAChBC,mBAAmB,EAJrB,UAME,cAACC,EAAA,EAAD,CAAazF,GAAG,GAAhB,wBACA,uBAAM0F,SAAUtF,KAAK0D,aAArB,UACE,eAAC6B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,wEAGA,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP/F,GAAG,GACHgB,MAAM,UACNgF,KAAK,OACLC,WAAS,EACTzD,MAAOvB,EACPF,SAAUX,KAAK0E,oBACfX,MAAO+B,QAAQlC,EAAO/C,SACtBkF,WAAYnC,EAAO/C,UAErB,cAAC4E,EAAA,EAAD,CACEE,OAAO,QACP/F,GAAG,GACHgB,MAAM,UACNgF,KAAK,OACLC,WAAS,EACTzD,MAAOpB,EACPL,SAAUX,KAAK6E,oBACfd,MAAO+B,QAAQlC,EAAO5C,SACtB+E,WAAYnC,EAAO5C,aAGvB,eAACgF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQzG,QAASQ,KAAKgF,YAAakB,MAAM,UAAzC,oBAGA,cAACD,EAAA,EAAD,CAAQC,MAAM,UAAUN,KAAK,SAA7B,iC,GA5H0BpD,IAAMvB,WCR/B,SAASkF,IACpB,OACI,2CACY,mBAAGvB,OAAO,SAASwB,KAAK,oCAAxB,4B,ICCCC,E,kDACnB,aAAe,IAAD,8BACZ,gBAyBFC,gBAAkB,WAChB,OAAO/E,KAAKgF,IAAL,MAAAhF,KAAI,YAAQE,OAAOO,KAAK,EAAKiC,MAAMtC,cAAe,GA3B7C,EA8BduC,kBAAoB,SAACsC,GACnB,EAAKxC,SAAS,CACZrC,WAAW,2BACN,EAAKsC,MAAMtC,YADN,kBAEP,EAAK2E,kBAAoB,CACxBzF,QAAS2F,EAAU3F,QACnBG,QAASwF,EAAUxF,QACnBc,UAAU,EACV2E,QAAQ,QAtCF,EA4CdC,sBAAwB,WACtB,EAAK1C,SAAS,CACZrC,WAAW,2BACN,EAAKsC,MAAMtC,YADN,kBAEP,EAAK2E,kBAAoB,CACxBzF,QAAS,cACTG,QAAS,cACTc,UAAU,EACV2E,QAAQ,QApDF,EA0DdE,gBAAkB,SAACC,GACjB,IAAIC,EAAa,eAAQ,EAAK5C,MAAMtC,YACpCkF,EAAcD,GAAd,UAA0CC,EAAcD,GAAd,SAG1C,EAAK5C,SAAS,CACZrC,WAAYkF,KAhEF,EAoEdC,cAAgB,SAACF,GACf,IAAIC,EAAa,eAAQ,EAAK5C,MAAMtC,mBAC7BkF,EAAcD,GACrB,EAAK5C,SAAS,CACZrC,WAAYkF,KAxEF,EA4EdE,cAAgB,SAACH,GACf,IAAIC,EAAa,eAAQ,EAAK5C,MAAMtC,YACpCkF,EAAcD,GAAd,QAAwCC,EAAcD,GAAd,OAGxC,EAAK5C,SAAS,CAAErC,WAAYkF,KA/E5B,EAAK5C,MAAQ,CACXtC,WAAY,CACVqF,EAAG,CACDnG,QAAS,YACTG,QAAS,6BACTc,UAAU,EACV2E,QAAQ,GAEVQ,EAAG,CACDpG,QAAS,UACTG,QAAS,oCACTc,UAAU,EACV2E,QAAQ,GAEVS,EAAG,CACDrG,QAAS,uBACTG,QAAS,sCACTc,UAAU,EACV2E,QAAQ,KApBF,E,qDAqFZ,OACE,sBAAKlE,UAAU,MAAf,UACE,cAAC,EAAD,CACEmE,sBAAuB1G,KAAK0G,sBAC5BpE,kBAAmBtC,KAAK8G,cACxBhH,oBAAqBE,KAAK2G,gBAC1BhH,kBAAmBK,KAAK+G,cACxBpF,WAAY3B,KAAKiE,MAAMtC,aAEzB,cAAC,EAAD,CAAYuC,kBAAmBlE,KAAKkE,oBACpC,cAACiC,EAAD,W,GAhGyB3D,IAAMvB,WCMxBkG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.202bee46.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nexport default class MyAccordion extends Component {\n  onClick = (e) => {\n    this.props.onAccordionSelect(this.props.id);\n  };\n\n  onComplete = (e) => {\n    this.props.onAccordionComplete(this.props.id);\n  };\n\n  render() {\n    return (\n      <Accordion onClick={this.onClick}>\n        <AccordionSummary\n          aria-label=\"Select\"\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"\"\n        >\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n            control={<Checkbox onChange={this.onComplete} />}\n            label={this.props.summary}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>{this.props.details}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n}\n","import React from \"react\";\nimport MyAccordion from \"./MyAccordion.js\";\nimport \"./../styles/AccordionContainer.css\";\n\nexport default class AccordionContainer extends React.Component {\n  getDisplayPercent = () => {\n    let percentComplete = this.getPercentComplete();\n    return isNaN(percentComplete) ? \"\" : percentComplete;\n  };\n\n  // returns NaN or a number 0 - 100\n  getPercentComplete = () => {\n    return Math.round(\n      (Object.values(this.props.accordions).filter((x) => x.complete).length /\n        Object.keys(this.props.accordions).length) *\n        100\n    );\n  };\n\n  getMessage = () => {\n    let percentComplete = this.getPercentComplete();\n    if (isNaN(percentComplete))\n      return \"Oops, all out of tasks! Add some or refresh the page to start again\";\n    switch (percentComplete) {\n      case 100:\n        return \":)\";\n      default:\n        return \"Check the boxes to get started.\";\n    }\n  };\n\n  render() {\n    let accordions = [];\n    for (const [key, value] of Object.entries(this.props.accordions)) {\n      accordions.push(\n        <MyAccordion\n          id={key}\n          key={key}\n          summary={value.summary}\n          details={value.details}\n          onAccordionSelect={this.props.onAccordionSelect}\n          onAccordionComplete={this.props.onAccordionComplete}\n          onAccordionDelete={this.props.onAccordionDelete}\n        ></MyAccordion>\n      );\n    }\n\n    let className = \"panel-container\";\n    return (\n      <div className={className}>\n        {this.getMessage()}\n        <div className=\"panel-container-header\">\n          <div className=\"panel-container-header-left\">\n            <b>Tasks</b>\n          </div>\n          <div className=\"panel-container-header-right\">\n            Completion: {this.getDisplayPercent()}%\n          </div>\n        </div>\n        {accordions}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fab, useMediaQuery } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./../styles/MyFab.css\";\r\n\r\nexport default function MyFab(props) {\r\n  const isMobile = useMediaQuery(\"(max-width: 600px)\");\r\n\r\n  const useStyles = makeStyles({\r\n    fabBase: {\r\n      position: \"fixed\",\r\n      bottom: isMobile ? \"20px\" : \"40px\",\r\n    },\r\n    fabLeft: {\r\n      left: isMobile ? \"16px\" : \"10%\",\r\n    },\r\n    fabRight: {\r\n      right: isMobile ? \"16px\" : \"10%\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  let alignmentClass;\r\n  switch (props.alignment) {\r\n    case \"right\":\r\n      alignmentClass = classes.fabRight;\r\n      break;\r\n    case \"left\":\r\n      alignmentClass = classes.fabRight;\r\n      break;\r\n    default:\r\n      alignmentClass = \"\"\r\n  }\r\n\r\n  return (\r\n    <Fab\r\n      onClick={props.onClick}\r\n      className={`${classes.fabBase} ${alignmentClass}`}\r\n    >\r\n      <AddIcon></AddIcon>\r\n    </Fab>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport MyFab from \"./MyFab.js\";\n\nexport default class FormDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fieldErrors = {\n      summary: \"Summary cannot be blank\",\n      details: \"Details cannot be blank\",\n    };\n    this.defaultState = {\n      open: false,\n      summary: \"\",\n      details: \"\",\n      errors: {\n        summary: \"\",\n        details: \"\",\n      },\n    };\n    this.state = this.defaultState;\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let errors = this.validateFields();\n    if (Object.values(errors).some((error) => error !== \"\")) {\n      this.setState({ ...this.state, errors: errors });\n      return;\n    }\n    this.props.onCreateAccordion({\n      summary: this.state.summary,\n      details: this.state.details,\n    });\n    this.setState(this.defaultState);\n  };\n\n  validateFields = () => {\n    let errors = {};\n    for (let [field, fieldErrorText] of Object.entries(this.fieldErrors)) {\n      errors[field] = this.state[field] ? \"\" : fieldErrorText;\n    }\n    return errors;\n  };\n\n  validateField = (field, fieldErrorMessage) => {\n    let fieldError = this.state[field] ? \"\" : fieldErrorMessage;\n    this.setState({\n      ...this.state,\n      errors: {\n        ...this.state.errors,\n        [field]: fieldError,\n      },\n    });\n  };\n\n  handleSummaryChange = (e) => {\n    let newState = {\n      ...this.state,\n      summary: e.target.value,\n    };\n    this.setState(newState, function () {\n      this.validateField(\"summary\", \"Summary cannot be blank\");\n    });\n  };\n\n  handleDetailsChange = (e) => {\n    let newState = { ...this.state, details: e.target.value };\n    this.setState(newState, function () {\n      this.validateField(\"details\", \"Details cannot be blank\");\n    });\n  };\n\n  handleClickOpen = () => {\n    let newState = { ...this.state, open: true };\n    this.setState(newState);\n  };\n\n  handleClose = () => {\n    let newState = { ...this.state, open: false };\n    this.setState(newState);\n  };\n\n  render() {\n    let { errors, open, summary, details } = this.state;\n    return (\n      <div>\n        <MyFab alignment=\"right\" onClick={this.handleClickOpen}></MyFab>\n        <Dialog\n          open={open}\n          onClose={this.handleClose}\n          aria-labelledby=\"\"\n          disableScrollLock={true}\n        >\n          <DialogTitle id=\"\">Add a task</DialogTitle>\n          <form onSubmit={this.handleSubmit}>\n            <DialogContent>\n              <DialogContentText>\n                To add a new task, enter the task title and details here.\n              </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"\"\n                label=\"Summary\"\n                type=\"text\"\n                fullWidth\n                value={summary}\n                onChange={this.handleSummaryChange}\n                error={Boolean(errors.summary)}\n                helperText={errors.summary}\n              />\n              <TextField\n                margin=\"dense\"\n                id=\"\"\n                label=\"Details\"\n                type=\"text\"\n                fullWidth\n                value={details}\n                onChange={this.handleDetailsChange}\n                error={Boolean(errors.details)}\n                helperText={errors.details}\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.handleClose} color=\"primary\">\n                Cancel\n              </Button>\n              <Button color=\"primary\" type=\"submit\">\n                Add\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React from 'react'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div>\r\n            View my <a target=\"_blank\" href=\"https://github.com/ryanplkam/2020\">source code</a>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport AccordionContainer from \"./components/AccordionContainer.js\";\nimport FormDialog from \"./components/FormDialog.js\";\nimport Footer from \"./components/Footer.js\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      accordions: {\n        1: {\n          summary: \"Groceries\",\n          details: \"Buy beef, eggs, and cheese\",\n          complete: false,\n          active: false,\n        },\n        2: {\n          summary: \"Haircut\",\n          details: \"Low fade with disconnected fringe\",\n          complete: false,\n          active: false,\n        },\n        3: {\n          summary: \"Work on side project\",\n          details: \"Complete the AWS React App tutorial\",\n          complete: false,\n          active: false,\n        },\n      },\n    };\n  }\n\n  nextAccordionId = () => {\n    return Math.max(...Object.keys(this.state.accordions)) + 1;\n  };\n\n  onCreateAccordion = (accordion) => {\n    this.setState({\n      accordions: {\n        ...this.state.accordions,\n        [this.nextAccordionId()]: {\n          summary: accordion.summary,\n          details: accordion.details,\n          complete: false,\n          active: false,\n        },\n      },\n    });\n  };\n\n  onCreateNewEmptyPanel = () => {\n    this.setState({\n      accordions: {\n        ...this.state.accordions,\n        [this.nextAccordionId()]: {\n          summary: \"Lorem ipsum\",\n          details: \"Lorem ipsum\",\n          complete: false,\n          active: false,\n        },\n      },\n    });\n  };\n\n  onPanelComplete = (accordionId) => {\n    let newAccordions = { ...this.state.accordions };\n    newAccordions[accordionId][\"complete\"] = !newAccordions[accordionId][\n      \"complete\"\n    ];\n    this.setState({\n      accordions: newAccordions,\n    });\n  };\n\n  onPanelDelete = (accordionId) => {\n    let newAccordions = { ...this.state.accordions };\n    delete newAccordions[accordionId];\n    this.setState({\n      accordions: newAccordions,\n    });\n  };\n\n  onPanelSelect = (accordionId) => {\n    let newAccordions = { ...this.state.accordions };\n    newAccordions[accordionId][\"active\"] = !newAccordions[accordionId][\n      \"active\"\n    ];\n    this.setState({ accordions: newAccordions });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <AccordionContainer\n          onCreateNewEmptyPanel={this.onCreateNewEmptyPanel}\n          onAccordionDelete={this.onPanelDelete}\n          onAccordionComplete={this.onPanelComplete}\n          onAccordionSelect={this.onPanelSelect}\n          accordions={this.state.accordions}\n        ></AccordionContainer>\n        <FormDialog onCreateAccordion={this.onCreateAccordion}></FormDialog>\n        <Footer></Footer>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}