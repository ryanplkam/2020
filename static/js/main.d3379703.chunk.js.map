{"version":3,"sources":["components/Checkbox.js","components/Panel.js","components/PanelsContainer.js","App.js","reportWebVitals.js","index.js"],"names":["Checkbox","onChange","e","props","onCheckboxChange","id","onClick","stopPropagation","this","className","checkboxClassName","type","name","value","React","Component","Panel","onPanelSelect","onDelete","onPanelDelete","panelArrow","panelContent","active","onPanelComplete","panelTitle","panelBody","PanelsContainer","getDisplayPercent","percentComplete","getPercentComplete","isNaN","Math","round","Object","values","panelsContent","filter","x","complete","length","keys","panelId","getMessage","panels","entries","key","push","App","newPanelsContent","state","setState","entry","forEach","panel","1","2","3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d3379703.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class Checkbox extends React.Component {\n  onChange = (e) => {\n    this.props.onCheckboxChange(this.props.id);\n  };\n\n  onClick = (e) => {\n    e.stopPropagation();\n  };\n\n  render() {\n    return (\n      <>\n        <input\n          onClick={this.onClick}\n          onChange={this.onChange}\n          className={this.props.checkboxClassName}\n          type=\"checkbox\"\n          id=\"\"\n          name=\"\"\n          value=\"\"\n        ></input>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./../styles/Panel.css\";\nimport \"./../styles/Common.css\";\nimport Checkbox from \"./Checkbox\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport default class Panel extends React.Component {\n\n  onClick = (e) => {\n    this.props.onPanelSelect(this.props.id);\n  };\n\n  onDelete = (e) => {\n    e.stopPropagation();\n    this.props.onPanelDelete(this.props.id);\n  };\n\n  render() {\n    let panelContent = this.props.panelContent;\n\n    let className = \"panel\";\n    let panelArrow;\n    if (this.props.active) {\n      className += \" panel-active\";\n      panelArrow = <KeyboardArrowUpIcon />;\n    } else {\n      panelArrow = <KeyboardArrowDownIcon />;\n    }\n\n    return (\n      <div onClick={this.onClick} className={className}>\n        <div className=\"panel-header\">\n          <div className=\"panel-header-left\">\n            <Checkbox\n              onCheckboxChange={this.props.onPanelComplete}\n              id={this.props.id}\n              key={this.props.id}\n            />\n          </div>\n          <div className=\"panel-header-title\">\n            <p>{panelContent.panelTitle}</p>\n          </div>\n          <div className={\"panel-header-right\"}>\n            <DeleteIcon onClick={this.onDelete}></DeleteIcon>\n          </div>\n          <div className={\"panel-header-right\"}>{panelArrow}</div>\n        </div>\n\n        <div className=\"panel-body\">\n          <p>{panelContent.panelBody}</p>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Panel from \"./Panel.js\";\nimport \"./../styles/PanelsContainer.css\";\n\nexport default class PanelsContainer extends React.Component {\n  getDisplayPercent = () => {\n    let percentComplete = this.getPercentComplete();\n    return isNaN(percentComplete) ? \"\" : percentComplete;\n  };\n\n  // returns NaN or a number 0 - 100\n  getPercentComplete = () => {\n    return Math.round(\n      (Object.values(this.props.panelsContent).filter((x) => x.complete)\n        .length /\n        Object.keys(this.props.panelsContent).length) *\n        100\n    );\n  };\n\n  onPanelSelect = (panelId) => {\n    this.props.onPanelSelect(panelId);\n  };\n\n  onPanelComplete = (panelId) => {\n    this.props.onPanelComplete(panelId);\n  };\n\n  getMessage = () => {\n    let percentComplete = this.getPercentComplete();\n    return percentComplete === 100\n      ? \":)\"\n      : isNaN(percentComplete)\n      ? \"Oops, all out of boxes! Add some boxes or refresh the page to start again\"\n      : \"Check the boxes to get started.\";\n  };\n\n  render() {\n    let panels = [];\n\n    for (const [key, value] of Object.entries(this.props.panelsContent)) {\n      panels.push(\n        <Panel\n          key={key}\n          id={key}\n          active={value[\"active\"]}\n          onPanelSelect={this.onPanelSelect}\n          onPanelComplete={this.onPanelComplete}\n          onPanelDelete={this.props.onPanelDelete}\n          panelContent={value}\n        ></Panel>\n      );\n    }\n\n    let className = \"panel-container\";\n    return (\n      <div className={className}>\n        {this.getMessage()}\n        <div className=\"panel-container-header\">\n          <div className=\"panel-container-header-left\">\n            <b>Topics</b>\n          </div>\n          <div className=\"panel-container-header-right\">\n            Completion: {this.getDisplayPercent()}%\n          </div>\n        </div>\n        {panels}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport PanelsContainer from \"./components/PanelsContainer.js\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      panelsContent: {\n        1: {\n          panelTitle: \"First panel\",\n          panelBody: \"Hello there\",\n          complete: false,\n          active: false,\n        },\n        2: {\n          panelTitle: \"Second panel\",\n          panelBody: \"Another happy landing\",\n          complete: false,\n          active: false,\n        },\n        3: {\n          panelTitle: \"Third panel\",\n          panelBody: \"The negotiations were short\",\n          complete: false,\n          active: false,\n        },\n      },\n    };\n  }\n\n  onPanelComplete = (panelId) => {\n    let newPanelsContent = { ...this.state.panelsContent };\n    newPanelsContent[panelId][\"complete\"] = !newPanelsContent[panelId][\n      \"complete\"\n    ];\n    this.setState({\n      panelsContent: newPanelsContent,\n    });\n  };\n\n  onPanelDelete = (panelId) => {\n    let newPanelsContent = { ...this.state.panelsContent };\n    delete newPanelsContent[panelId];\n    this.setState({\n      panelsContent: newPanelsContent,\n    });\n  };\n\n  onPanelSelect = (panelId) => {\n    let newPanelsContent = { ...this.state.panelsContent };\n    newPanelsContent[panelId][\"active\"] = !newPanelsContent[panelId][\"active\"];\n    Object.entries(newPanelsContent)\n      .filter((entry) => entry[0] !== panelId)\n      .forEach((panel) => (panel[1][\"active\"] = false));\n    this.setState({ panelsContent: newPanelsContent });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PanelsContainer\n          onPanelDelete={this.onPanelDelete}\n          onPanelComplete={this.onPanelComplete}\n          onPanelSelect={this.onPanelSelect}\n          panelsContent={this.state.panelsContent}\n        ></PanelsContainer>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}