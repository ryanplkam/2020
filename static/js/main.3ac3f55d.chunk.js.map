{"version":3,"sources":["components/MyAccordion.js","components/PanelsContainer.js","components/MyFab.js","components/FormDialog.js","App.js","reportWebVitals.js","index.js"],"names":["MyAccordion","onClick","e","props","onAccordionSelect","id","onComplete","onAccordionComplete","Accordion","this","AccordionSummary","aria-label","expandIcon","aria-controls","FormControlLabel","event","stopPropagation","onFocus","control","Checkbox","onChange","label","summary","AccordionDetails","Typography","details","Component","PanelsContainer","getDisplayPercent","percentComplete","getPercentComplete","isNaN","Math","round","Object","values","accordions","filter","x","complete","length","keys","getMessage","entries","key","value","push","onAccordionDelete","className","React","MyFab","alignmentClass","isMobile","useMediaQuery","classes","makeStyles","fabBase","position","bottom","fabLeft","left","fabRight","right","useStyles","alignment","Fab","onFabClick","FormDialog","useState","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","type","fullWidth","DialogActions","Button","color","App","onCreateNewEmptyPanel","nextId","max","state","setState","active","onPanelComplete","accordionId","newAccordions","onPanelDelete","onPanelSelect","1","2","3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ac3f55d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nexport default class MyAccordion extends Component {\n  onClick = (e) => {\n    this.props.onAccordionSelect(this.props.id);\n  };\n\n  onComplete = (e) => {\n    this.props.onAccordionComplete(this.props.id);\n  };\n\n  render() {\n    return (\n      <Accordion onClick={this.onClick}>\n        <AccordionSummary\n          aria-label=\"Select\"\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            onClick={(event) => event.stopPropagation()}\n            onFocus={(event) => event.stopPropagation()}\n            control={<Checkbox onChange={this.onComplete} />}\n            label={this.props.summary}\n          />\n        </AccordionSummary>\n        <AccordionDetails>\n          <Typography>{this.props.details}</Typography>\n        </AccordionDetails>\n      </Accordion>\n    );\n  }\n}\n","import React from \"react\";\nimport MyAccordion from \"./MyAccordion.js\";\nimport \"./../styles/PanelsContainer.css\";\n\nexport default class PanelsContainer extends React.Component {\n  getDisplayPercent = () => {\n    let percentComplete = this.getPercentComplete();\n    return isNaN(percentComplete) ? \"\" : percentComplete;\n  };\n\n  // returns NaN or a number 0 - 100\n  getPercentComplete = () => {\n    return Math.round(\n      (Object.values(this.props.accordions).filter((x) => x.complete).length /\n        Object.keys(this.props.accordions).length) *\n        100\n    );\n  };\n\n  getMessage = () => {\n    let percentComplete = this.getPercentComplete();\n    if (isNaN(percentComplete))\n      return \"Oops, all out of boxes! Add some boxes or refresh the page to start again\";\n    switch (percentComplete) {\n      case 100:\n        return \":)\";\n      default:\n        return \"Check the boxes to get started.\";\n    }\n  };\n\n  render() {\n    let accordions = [];\n    for (const [key, value] of Object.entries(this.props.accordions)) {\n      accordions.push(\n        <MyAccordion\n          id={key}\n          key={key}\n          summary={value.summary}\n          details={value.details}\n          onAccordionSelect={this.props.onAccordionSelect}\n          onAccordionComplete={this.props.onAccordionComplete}\n          onAccordionDelete={this.props.onAccordionDelete}\n        ></MyAccordion>\n      );\n    }\n\n    let className = \"panel-container\";\n    return (\n      <div className={className}>\n        {this.getMessage()}\n        <div className=\"panel-container-header\">\n          <div className=\"panel-container-header-left\">\n            <b>Topics</b>\n          </div>\n          <div className=\"panel-container-header-right\">\n            Completion: {this.getDisplayPercent()}%\n          </div>\n        </div>\n        {accordions}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Fab, useMediaQuery } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport \"./../styles/MyFab.css\";\r\n\r\nexport default function MyFab(props) {\r\n  const isMobile = useMediaQuery(\"(max-width: 600px)\");\r\n\r\n  const useStyles = makeStyles({\r\n    fabBase: {\r\n      position: \"absolute\",\r\n      bottom: isMobile ? \"20px\" : \"40px\",\r\n    },\r\n    fabLeft: {\r\n      left: isMobile ? \"16px\" : \"10%\",\r\n    },\r\n    fabRight: {\r\n      right: isMobile ? \"16px\" : \"10%\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n\r\n  let alignmentClass;\r\n  switch (props.alignment) {\r\n    case \"right\":\r\n      alignmentClass = classes.fabRight;\r\n      break;\r\n    case \"left\":\r\n      alignmentClass = classes.fabRight;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <Fab\r\n      onClick={props.onFabClick}\r\n      className={`${classes.fabBase} ${alignmentClass}`}\r\n    >\r\n      <AddIcon></AddIcon>\r\n    </Fab>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MyFab from \"./MyFab.js\";\r\n\r\nexport default function FormDialog() {\r\n  // useState returns the current state and the function that updates it\r\n  // similar to this.state.count and this.setState\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MyFab alignment=\"right\" onFabClick={handleClickOpen}></MyFab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here.\r\n            We will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport PanelsContainer from \"./components/PanelsContainer.js\";\nimport MyFab from \"./components/MyFab.js\";\nimport FormDialog from \"./components/FormDialog.js\";\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      accordions: {\n        1: {\n          summary: \"First panel\",\n          details: \"Hello there\",\n          complete: false,\n          active: false,\n        },\n        2: {\n          summary: \"Second panel\",\n          details: \"Another happy landing\",\n          complete: false,\n          active: false,\n        },\n        3: {\n          summary: \"Third panel\",\n          details: \"The negotiations were short\",\n          complete: false,\n          active: false,\n        },\n      },\n    };\n  }\n\n  onCreateNewEmptyPanel = () => {\n    let nextId = Math.max(...Object.keys(this.state.accordions)) + 1;\n    this.setState({\n      accordions: {\n        ...this.state.accordions,\n        [nextId]: {\n          summary: \"Lorem ipsum\",\n          details: \"Lorem ipsum\",\n          complete: false,\n          active: false,\n        },\n      },\n    });\n  };\n\n  onPanelComplete = (accordionId) => {\n    let newAccordions = { ...this.state.accordions };\n    newAccordions[accordionId][\"complete\"] = !newAccordions[accordionId][\n      \"complete\"\n    ];\n    this.setState({\n      accordions: newAccordions,\n    });\n  };\n\n  onPanelDelete = (accordionId) => {\n    let newAccordions = { ...this.state.accordions };\n    delete newAccordions[accordionId];\n    this.setState({\n      accordions: newAccordions,\n    });\n  };\n\n  onPanelSelect = (accordionId) => {\n    let newAccordions = { ...this.state.accordions };\n    newAccordions[accordionId][\"active\"] = !newAccordions[accordionId][\n      \"active\"\n    ];\n    this.setState({ accordions: newAccordions });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <PanelsContainer\n          onCreateNewEmptyPanel={this.onCreateNewEmptyPanel}\n          onAccordionDelete={this.onPanelDelete}\n          onAccordionComplete={this.onPanelComplete}\n          onAccordionSelect={this.onPanelSelect}\n          accordions={this.state.accordions}\n        ></PanelsContainer>\n        <FormDialog></FormDialog>\n        {/*<MyFab alignment=\"right\"></MyFab>*/}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}